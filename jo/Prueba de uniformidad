import numpy as np
from scipy import stats
import matplotlib.pyplot as plt

# Generar 100 números aleatorios entre 0 y 1
random_numbers = np.random.uniform(0, 1, 100)

# Imprimir los números aleatorios generados
print("Números aleatorios generados:")
print(random_numbers)

# Realizar la prueba de Kolmogorov-Smirnov para uniformidad
ks_statistic, p_value = stats.kstest(random_numbers, 'uniform')

# Mostrar los resultados
print(f"\nEstadístico de Kolmogorov-Smirnov: {ks_statistic}")
print(f"Valor p: {p_value}")

# Interpretación del resultado
alpha = 0.05  # Nivel de significancia
if p_value > alpha:
    print("No se rechaza la hipótesis nula (los datos siguen una distribución uniforme).")
else:
    print("Se rechaza la hipótesis nula (los datos no siguen una distribución uniforme).")

# Graficar el histograma de los números aleatorios
plt.figure(figsize=(10, 5))

# Histograma
plt.subplot(1, 2, 1)
plt.hist(random_numbers, bins=10, edgecolor='black', alpha=0.7, color='lightblue')
plt.title("Histograma de Números Aleatorios Uniformes")
plt.xlabel("Valor")
plt.ylabel("Frecuencia")

# Graficar la función de distribución acumulada
plt.subplot(1, 2, 2)
# Obtener la CDF empírica
empirical_cdf = np.sort(random_numbers)
cdf_values = np.arange(1, len(empirical_cdf) + 1) / len(empirical_cdf)

# Gráfico de la CDF
plt.plot(empirical_cdf, cdf_values, marker='.', linestyle='none', label='CDF Empírica')
plt.plot([0, 1], [0, 1], 'r--', label='CDF Teórica (Uniforme)')
plt.title("Función de Distribución Acumulada")
plt.xlabel("Valor")
plt.ylabel("Probabilidad Acumulada")
plt.legend()

# Mostrar gráficos
plt.tight_layout()
plt.show()
